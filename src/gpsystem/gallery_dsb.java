package gpsystem;

import javax.swing.*;
import java.awt.*;
import java.io.File;
import javax.swing.ImageIcon;

public class gallery_dsb extends javax.swing.JFrame {

    private static final String IMAGE_DIR = "captures"; // Path to the directory with images
    private static final int THUMBNAIL_WIDTH = 150; // Width of each thumbnail
    private static final int THUMBNAIL_HEIGHT = 100; // Height of each thumbnail

    public gallery_dsb() {
        setLayout(new GridLayout(0, 3, 10, 10)); // Display images in a grid with 3 columns

        // Load images dynamically from directory
        loadImages();
    }

    private void loadImages() {
        File dir = new File(IMAGE_DIR);
        if (!dir.exists() || !dir.isDirectory()) {
            add(new JLabel("No images found!"));
            return;
        }

        File[] imageFiles = dir.listFiles((d, name) -> {
            // Filter for common image formats
            return name.endsWith(".jpg") || name.endsWith(".png") || name.endsWith(".jpeg");
        });

        if (imageFiles == null || imageFiles.length == 0) {
            add(new JLabel("No images to display."));
            return;
        }

        for (File imageFile : imageFiles) {
            add(createThumbnailPanel(imageFile));
        }
    }

    private JPanel createThumbnailPanel(File imageFile) {
        JPanel panel = new JPanel();
        panel.setLayout(new BorderLayout());

        // Create and scale the image
        ImageIcon icon = new ImageIcon(imageFile.getAbsolutePath());
        Image scaledImage = icon.getImage().getScaledInstance(THUMBNAIL_WIDTH, THUMBNAIL_HEIGHT, Image.SCALE_SMOOTH);
        icon = new ImageIcon(scaledImage);

        JLabel label = new JLabel(icon);
        label.setToolTipText(imageFile.getName()); // Show the file name on hover

        // Add image and filename to the panel
        panel.add(label, BorderLayout.CENTER);
        panel.add(new JLabel(imageFile.getName(), SwingConstants.CENTER), BorderLayout.SOUTH);

        return panel;
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        JFrame frame = new JFrame("Image Gallery");
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setSize(600, 400);

        // Add the gallery component to the frame
        frame.add(new JScrollPane(new gallery_dsb())); // Add scrollable functionality
        frame.setVisible(true);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables
}
